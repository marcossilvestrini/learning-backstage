#----------------- NVM -----------------------
- name: Check if .nvm directory exists
  stat:
    path: "{{ ansible_env.HOME }}/.nvm"
  register: nvm_folder

- name: Remove existing .nvm directory
  file:
    path: "{{ ansible_env.HOME }}/.nvm"
    state: absent
  when: nvm_folder.stat.exists

- name: Download and install NVM
  shell: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
  args:
    chdir: "{{ ansible_env.HOME }}"
    executable: /bin/bash
  when: not nvm_folder.stat.exists

- name: Check nvm version
  shell: source "{{ ansible_env.HOME }}/.bashrc" && nvm -v
  args:
    chdir: "{{ ansible_env.HOME }}"
    executable: /bin/bash
  register: nvm_version
  ignore_errors: true

- name: Display nvm version
  debug:
    var: nvm_version.stdout

#----------------- NPM -----------------------

- name: Check if .npm directory exists
  stat:
    path: "{{ ansible_env.HOME }}/.npm"
  register: npm_dir

- name: Remove existing .npm directory
  file:
    path: "{{ ansible_env.HOME }}/.npm"
    state: absent
  when: npm_dir.stat.exists

- name: Install Node.js using nvm
  shell: source "{{ ansible_env.HOME }}/.bashrc" &&  nvm install --lts
  args:
    chdir: "{{ ansible_env.HOME }}"
    executable: /bin/bash

- name: Check Node.js version
  shell: source "{{ ansible_env.HOME }}/.bashrc" && npm -v
  args:
    chdir: "{{ ansible_env.HOME }}"
    executable: /bin/bash
  register: npm_version
  ignore_errors: true

- debug:
    msg: "npm version is {{ npm_version.stdout }}"

#----------------- YARN ----------------------

- name: Check if .yarn directory exists
  stat:
    path: "{{ ansible_env.HOME }}/.yarn"
  register: yarn_dir

- name: Remove existing .yarn directory
  file:
    path: "{{ ansible_env.HOME }}/.yarn"
    state: absent
  when: yarn_dir.stat.exists

- name: Install Yarn  
  shell: source "{{ ansible_env.HOME }}/.bashrc" && npm install --global yarn
  args:
    chdir: "{{ ansible_env.HOME }}"
    executable: /bin/bash  

- name: Check Yarn version
  shell: source "{{ ansible_env.HOME }}/.bashrc"  && yarn -v
  args:
    chdir: "{{ ansible_env.HOME }}"
    executable: /bin/bash
  register: yarn_version
  ignore_errors: true

- name: Display Yarn version
  debug:
    var: yarn_version.stdout
