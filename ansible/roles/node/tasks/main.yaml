- name: Remove existing nvm directory
  file:
    path: ~/.nvm
    state: absent
  ignore_errors: true
  become_user: '{{ user_backstage }}'

- name: Set NVM_DIR environment variable
  set_fact:
    nvm_dir: "{{ ansible_env.HOME }}/.nvm"
  become_user: '{{ user_backstage }}'

- name: Download and install NVM
  shell: |
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
  args:
    executable: /bin/bash
  become_user: '{{ user_backstage }}'

- name: Source NVM
  shell: |
    export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "{{ nvm_dir }}" || printf %s "${XDG_CONFIG_HOME}/nvm")"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
  args:
    executable: /bin/bash
  become_user: '{{ user_backstage }}'

- name: Check nvm version
  shell: "source ~/.nvm/nvm.sh && nvm -v"
  register: nvm_version
  become_user: '{{ user_backstage }}'

- name: Display nvm version
  debug:
    var: nvm_version.stdout
  become_user: '{{ user_backstage }}'

- name: Remove existing .npm directory
  file:
    path: "{{ ansible_env.HOME }}/.npm"
    state: absent
  ignore_errors: true
  become_user: '{{ user_backstage }}'

- name: Install Node.js using nvm
  shell: "source ~/.nvm/nvm.sh && nvm install --lts"
  become_user: '{{ user_backstage }}'

- name: Find Node.js path
  shell: which node
  register: node_path
  become_user: '{{ user_backstage }}'

- name: Check Node.js
  shell: "{{ node_path.stdout }} -v"
  register: node_version
  become_user: '{{ user_backstage }}'

- name: Display Node.js
  debug:
    var: node_version.stdout_lines

- name: Install Yarn
  become: true
  become_user: vagrant
  shell: |
    source /home/vagrant/.bashrc
    npm install --global yarn
  args:
    executable: /bin/bash

- name: Check Yarn version
  become: true
  become_user: vagrant
  shell: yarn -v
  register: yarn_version

- name: Display Yarn version
  debug:
    var: yarn_version.stdout
